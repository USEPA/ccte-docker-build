name: 'Docker GHCR Action'
description: 'Build and push Docker images to GitHub Container Registry'
inputs:
  registry:
    description: 'Docker registry to use'
    required: false
    default: 'ghcr.io'
  username:
    description: 'Username for the Docker registry'
    required: true
  password:
    description: 'Password or token for the Docker registry'
    required: true
  image_name:
    description: 'Name of the Docker image'
    required: true
  dockerfile:
    description: 'Path to the Dockerfile'
    required: false
    default: 'Dockerfile'
  env_text:
    description: 'Environment variables as text (optional)'
    required: false
  build_args:
    description: 'Build arguments for Docker (optional)'
    required: false
    
permissions:
  contents: read
  packages: write 
  
runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Pull LFS files
      run: git lfs pull
      shell: bash

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v3

    - name: Log into registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name }}
        tags: latest

    - name: Create .env File from Text
      if: ${{ inputs.env_text }}
      run: |
        echo "Creating .env file from input text"
        echo "${{ inputs.env_text }}" > .env
        echo "New .env file created as .env"
      shell: bash

    - name: Contents of .env
      if: ${{ inputs.env_text }}
      run: cat .env
      shell: bash
      
   # Configure .npmrc for package installs if using "frontend" or "ui"
    - name: Configure .npmrc
      if: contains(inputs.image_name, 'frontend') || contains(inputs.image_name, 'ui')  # Check for "frontend" or "ui"
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
        echo "@usepa:registry=https://npm.pkg.github.com/" >> .npmrc

    # Set Node.js old space size if using "frontend" or "ui"
    - name: Set Node Old Space
      if: contains(inputs.image_name, 'frontend') || contains(inputs.image_name, 'ui')  # Check for "frontend" or "ui"
      run: echo "NODE_OPTIONS='--max-old-space-size=1024'" >> $GITHUB_ENV 

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build_args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Extract Repository Name
      id: extract_repo_name
      run: |
        FULL_NAME="${{ inputs.image_name }}"
        REPO_NAME="${FULL_NAME##*/}"
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
      shell: bash

    - name: Delete Package Versions
      uses: actions/delete-package-versions@v4.1.0
      with:
        package-name: ${{ env.REPO_NAME }}
        package-type: 'container'
        min-versions-to-keep: 3
        delete-only-untagged-versions: 'true'
